@import '../node_modules/bootstrap/dist/css/bootstrap-grid.css';
.cineva {
  font-size: 0;
}
.cineva > * {
  display: inline-block;
  font-size: 1rem;
}

.section {
  padding-top: 20px;
}
@media (min-width: 1200px) {
  .section {
    padding-top: 40px;
  }
}

.section__title {
  font-size: 1.25rem;
}
@media (max-width: 768px) {
  .section__title {
    font-size: 0.875rem;
  }
}

.section__content {
  margin-bottom: 20px;
}
@media (min-width: 768px) and (max-width: 1200px) {
  .section__content {
    margin-bottom: 40px;
  }
}

.ratio-box1 {
  position: relative;
}
.ratio-box1::before {
  content: "";
  padding-top: 56.25%;
  display: block;
}
.ratio-box1 > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.ratio-box--16-9::before {
  padding-top: 56.25%;
}

.ratio-box--4-3::before {
  padding-top: 75%;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.ratio-box {
  position: relative;
}
.ratio-box::before {
  content: "";
  padding-top: 100%;
  display: block;
}
.ratio-box > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.ratio-box--16-9::before {
  padding-top: 56.25%;
}

.ratio-box--4-3::before {
  padding-top: 75%;
}

.filter-box {
  position: relative;
}
.filter-box::before {
  content: "";
  padding-top: 56.25%;
  display: block;
}
.filter-box > * {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.filter-box--grayscale:hover img {
  filter: grayscale(100%);
}

.filter-box--blur:hover img {
  filter: blur(20px);
}

.filter-box--brightness:hover img {
  filter: brightness(40);
}

.filter-box--contrast:hover img {
  filter: contrast(200%);
}

.filter-box--drop-shadow:hover img {
  filter: drop-shadow(10px 10px 20px violet);
}

.filter-box--invert:hover img {
  filter: invert 100%;
}

.filter-box--opacity:hover img {
  filter: opacity(30%);
}

.filter-box--saturate:hover img {
  filter: saturate(90%);
}

.filter-box--sepia:hover img {
  filter: sepia(50%);
}

.filter-box--revert:hover img {
  filter: revert(40%);
}

.filter-box--hue-rotate:hover img {
  filter: hue-rotate(90deg);
}

.filter-box--grayscale-blur:hover img {
  filter: grayscale(80%) blur(40px);
}

.filter-box--brightness-invert:hover img {
  filter: brightness(60) invert(50%);
}

.filter-box--bcss:hover img {
  filter: blur(15px) brightness(1.8) contrast(20%) saturate(30%);
}

.filter-box--x-ray:hover img {
  filter: grayscale(90%) saturate(30%) sepia(10%) url("#x-rays");
}

.gradient-box {
  position: relative;
}
.gradient-box::before {
  content: "";
  padding-top: 75%;
  display: block;
}
.gradient-box > * {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.gradient-box--1 {
  background: linear-gradient(90deg, red, violet);
}

.gradient-box--2 {
  background: linear-gradient(90deg, rgb(2, 0, 36) 0%, rgb(9, 9, 121) 35%, rgb(8, 37, 140) 51%, rgb(8, 140, 131) 100%);
}

.gradient-box--3 {
  background: linear-gradient(90deg, rgb(131, 58, 180) 0%, rgba(202, 87, 203, 0.8337710084) 51%, rgb(77, 252, 69) 100%);
}

.gradient-box--4 {
  background: radial-gradient(circle, rgb(195, 34, 34) 0%, rgba(253, 252, 45, 0.9654236695) 85%);
}

.gradient-box--5 {
  background: radial-gradient(circle, rgb(34, 38, 195) 0%, rgb(176, 41, 41) 55%, rgba(58, 253, 45, 0.9654236695) 85%);
}

.gradient-box--6 {
  background: radial-gradient(circle, rgb(217, 145, 33) 0%, rgb(58, 41, 176) 18%, rgb(217, 145, 33) 55%, rgb(58, 41, 176) 85%);
}

.gradient-box--7 {
  background: linear-gradient(0deg, rgb(201, 33, 217) 0%, rgb(247, 230, 0) 25%, rgb(201, 33, 217) 50%, rgb(247, 230, 0) 75%, rgb(201, 33, 217) 99%);
}

.gradient-box--8 {
  background: linear-gradient(0deg, rgb(245, 9, 3) 0%, rgb(247, 230, 0) 50%, rgb(6, 20, 241) 99%);
}

.gradient-box--9 {
  background: linear-gradient(0deg, rgb(3, 26, 245) 0%, rgb(246, 106, 2) 22%, rgb(247, 230, 0) 50%, rgb(57, 128, 68) 77%, rgb(6, 20, 241) 99%);
}

.gradient-box--10 {
  background: radial-gradient(circle, rgb(3, 26, 245) 0%, rgb(246, 106, 2) 22%, rgb(247, 230, 0) 50%, rgb(57, 128, 68) 77%, rgb(6, 20, 241) 99%);
}

.gradient-box--11 {
  background: radial-gradient(circle, rgb(3, 245, 13) 0%, rgb(246, 2, 234) 22%, rgb(0, 247, 246) 50%, rgb(246, 2, 234) 77%, rgb(3, 245, 13) 99%);
}

.gradient-box--12 {
  background: radial-gradient(circle, rgb(245, 3, 3) 0%, rgb(0, 0, 0) 22%, rgb(251, 242, 8) 50%, rgb(0, 0, 0) 77%, rgb(245, 3, 3) 99%);
}

.gradient-box--13 {
  background: linear-gradient(0deg, rgb(251, 242, 8) 0%, rgb(0, 0, 0) 22%, rgb(245, 3, 3) 50%, rgb(0, 0, 0) 77%, rgb(251, 242, 8) 99%);
}

.gradient-box--14 {
  background: linear-gradient(0deg, rgb(8, 246, 241) 0%, rgb(7, 61, 241) 20%, rgb(8, 246, 241) 40%, rgb(7, 61, 241) 60%, rgb(8, 246, 241) 80%, rgb(7, 61, 241) 100%);
}

.gradient-box--15 {
  background: linear-gradient(0deg, rgb(47, 246, 8) 0%, rgb(241, 7, 143) 15%, rgb(47, 246, 8) 30%, rgb(241, 7, 143) 45%, rgb(47, 246, 8) 60%, rgb(241, 7, 143) 75%, rgb(47, 246, 8) 90%, rgb(241, 7, 143) 100%);
}

/*
transform: scale(0.5) - scaleaza (schimba dimensiunea) boxei in dependenta de coeficient pe ambele axe pe
transform: scaleX() - scaleaza (schimba dimensiunea) boxei in dependenta de coeficient pe axa X
transform: scaleY() - scaleaza (schimba dimensiunea) boxei in dependenta de coeficient pe axa Y
transform: scaleZ() - scaleaza (schimba dimensiunea) boxei in dependenta de coeficient pe axa Z
transform: scale3d(X, Y, Z)

transform: skew(45deg) - distortioneaza boxa in dependenta de inclinare pe ambele axe pe
transform: skewX() - distortioneaza boxa in dependenta de inclinare pe axa X
transform: skewY() - distortioneaza boxa in dependenta de inclinare pe axa Y
transform: skewZ() - distortioneaza boxa in dependenta de inclinare pe axa Z
transform: skew3d(X, Y, Z)

transform: translate(50%) - muta (schimba pozitionarea) boxei pe ambele axe pe
transform: translateX() - muta (schimba pozitionarea) boxei pe axa X
transform: translateY() - muta (schimba pozitionarea) boxei pe axa Y
transform: translateZ() - muta (schimba pozitionarea) boxei pe axa Z
transform: translate3d(X, Y, Z)

transform: rotate(50%) - rotateste boxei pe axa Z
transform: rotateX() - rotateste boxei pe axa X
transform: rotateY() - rotateste boxei pe axa Y
transform: rotateZ() - rotateste boxei pe axa Y
transform: rotate3d(X, Y, Z, axa)

transform-style: flat || preserve-3d - determina daca browserul intr-adevar sa arate elementel in 3d (preserve-3d) sau nu (flat)

transform-origin: top center - determina de unde incepe tranformarea (exemplu: batutul unui cuie in pictura din perete)

backface-visibility: visible || hidden - determina daca partea din spate a unui 3d obiect se stravede sau nu

perspective: 500px - determina distanta de la punctul axei z=0 pana la ecranul utilizatorului. Ofera perspectiva unui 3d scene

perspective-origin: top left - determina de unde incepem numaratoarea distantei perspective fata de obiect
*/
.transform-element {
  width: 100%;
  height: 300px;
  background: rgb(206, 79, 168);
  display: flex;
  justify-content: center;
  align-items: center;
}

.transform-action-area--1:hover .transform-element {
  transform: scale(0.5, 1.2);
}

.transform-action-area--2:hover .transform-element {
  transform: scaleX(2);
}

.transform-action-area--3:hover .transform-element {
  transform: scaleY(0.5);
}

.transform-action-area--4:hover .transform-element {
  transform: rotate3d(1, 2, 3, 50deg);
}

.transform-action-area--5:hover .transform-element {
  transform: rotateX(100deg);
}

.transform-action-area--6:hover .transform-element {
  transform: rotateY(50deg);
}

.transform-action-area--7:hover .transform-element {
  transform: translate3d(17px, 25%, 3em);
}

.transform-action-area--8:hover .transform-element {
  transform: translateX(5em);
}

.transform-action-area--9:hover .transform-element {
  transform: translateY(2in);
}

.transform-action-area--10:hover .transform-element {
  transform: skew(20deg, 30deg);
}

.transform-action-area--11:hover .transform-element {
  transform: skewX(25deg);
}

.transform-action-area--12:hover .transform-element {
  transform: skewY(1.07rad);
}

.transform-action-area--13:hover .transform-element {
  transform: matrix(1, 2, 3, 4, 5, 6);
}

.transform-action-area--14:hover .transform-element {
  transform: matrix3d(0.583333, 0.186887, 0.79044, 0, -0.52022, 0.833333, 0.186887, 0, -0.623773, -0.52022, 0.583333, 0, 0, 0, 0, 1);
}

.transform-action-area--15:hover .transform-element {
  transform: translateX(30px) rotate(25deg);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
